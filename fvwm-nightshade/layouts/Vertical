#-----------------------------------------------------------------------
# File:		Vertical
# Version:	1.0.3
# Licence: 	GPL 2
#
# Description:	Layout of object positions on desktop
#
# Author:	Thomas Funk <t.funk@web.de>	
# Created:	08/16/2012
# Changed:	09/23/2012
#-----------------------------------------------------------------------
# Top right
#
# +--------+
# |        | Panel
# +--------+
# +--------+
# |        | Pager
# +--------+
# +--------+
# |        | IconManager
# +--------+
#
#-----------------------------------------------------------------------

########################################################################
#                        Positioning
########################################################################


#=======================================================================
# FvwmButtons Panel
#=======================================================================

#-----------------------------------------------------------------------
# Panel width
#-----------------------------------------------------------------------
# the width composed of the count of systray icons

# create the count of icons visible in stalonetray must set related to the
# screen resolution
PipeRead 	'if [ "$[vp.width]" -gt "1600" ]; then \
				echo InfoStoreAdd tray_icons 6; \
			elif [ "$[vp.width]" -gt "1400" ]; then \
				echo InfoStoreAdd tray_icons 5; \
			elif [ "$[vp.width]" -gt "1200" ]; then \
				echo InfoStoreAdd tray_icons 4; \
			else \
				echo InfoStoreAdd tray_icons 3; \
			fi'

# needed columns
PipeRead 'echo InfoStoreAdd panel_columns $(($[infostore.tray_icons]*2))'

# panel width
PipeRead "echo InfoStoreAdd panel_width `perl -e 'printf \"%.0f\",$[infostore.panel_columns]*12*$[infostore.ratio]'`"

#-----------------------------------------------------------------------
# Panel height
#-----------------------------------------------------------------------
InfoStoreAdd panel_rows 20
PipeRead "echo InfoStoreAdd row_height `perl -e 'printf \"%.0f\",$[vp.height]/(83*$[infostore.ratio])'`"
PipeRead 'echo InfoStoreAdd panel_height $(($[infostore.row_height]*$[infostore.panel_rows]))'

#-----------------------------------------------------------------------
# Panel geometry
#-----------------------------------------------------------------------
PipeRead 'echo InfoStoreAdd panel_geometry $[infostore.panel_width]x$[infostore.panel_height]-0+0'


#=======================================================================
# Pager
#=======================================================================

#-----------------------------------------------------------------------
# Set the desk top size in units of physical screen size
#
#   +-----+-----+
#   |     |     |
#   +-----+-----+
#   |     |     |
#   +-----+-----+
#-----------------------------------------------------------------------
DeskTopSize 2x2

#-----------------------------------------------------------------------
# actual pager height
#-----------------------------------------------------------------------
PipeRead "echo InfoStoreAdd pager_height `perl -e 'printf \"%.0f\",$[vp.height]/(10*$[infostore.ratio])'`"


#-----------------------------------------------------------------------
# FvwmPager geometry
#-----------------------------------------------------------------------
PipeRead 'echo InfoStoreAdd pager_geometry $[infostore.panel_width]x$[infostore.pager_height]-0+$(($[infostore.panel_height]+4))'


#=======================================================================
# Icon Manager (WinList per Page)
#=======================================================================

#-----------------------------------------------------------------------
# GlobalIconMan Button Geometry
#-----------------------------------------------------------------------
PipeRead 'echo InfoStoreAdd iconman_button_geometry $(($[infostore.panel_width]-$[infostore.titlebar_height]+1))x0'

#-----------------------------------------------------------------------
# GlobalIconMan Manager Geometry
#-----------------------------------------------------------------------
PipeRead "echo InfoStoreAdd yStartIman `perl -e 'printf \"%.0f\",$[vp.height]-($[infostore.panel_height]+$[infostore.pager_height])-(1.9*$[infostore.fontsize]*$[infostore.ratio])'`"
PipeRead "echo InfoStoreAdd xStartIman `perl -e 'printf \"%.0f\",$[vp.width]-$[infostore.panel_width]-3'`"
InfoStoreAdd iconman_manager_geometry 1x0+$[infostore.xStartIman]-$[infostore.yStartIman]

#-----------------------------------------------------------------------
# GlobalIconMan Manager Titlebar position
#-----------------------------------------------------------------------
Style GlobalIconManShowHide TitleAtLeft

#-----------------------------------------------------------------------
# GlobalIconMan Manager Tips
#-----------------------------------------------------------------------
InfoStoreAdd tips_iman always


#=======================================================================
# Others
#=======================================================================

#-----------------------------------------------------------------------
# Define bands at the edge of the screen. It is used to compute the
# Working Area: EwmhBaseStruts left right top bottom 
#-----------------------------------------------------------------------
PipeRead 'echo EwmhBaseStruts 0 $(($[infostore.panel_width]+4)) 0 0'

#-----------------------------------------------------------------------
# IconBox defines the area where FVWM will place any windows that are
# in the iconic state: 
#  IconBox left top right bottom
#
# IconGrid ist the distance between each icon. Default grid is 3x3 pixels:
#  IconGrid x y
#
# IconFill defines the direction icons will place. Default is from left
# to right. To fill an icon box in columns instead of rows, specify the
# vertical direction (top or bottom) first.
#-----------------------------------------------------------------------
Style * IconBox 20 80 -$[infostore.panel_width] -20, \
        IconGrid 40 40, \
        IconFill left bottom, \
        StaysOnBottom


#=======================================================================
# Load layout elements
#=======================================================================
Load modules/GlobalIconMan_ShowHide
Load modules/Pager
Load modules/VerticalPanel

#=======================================================================
# Functions
#=======================================================================

AddToFunc StartFunction
# start event handler for GlobalIconMan_ShowHide
+ I Module FvwmEvent FvwmEventShowHide
#-----------------------------------------------------------------------
# start window list module
+ I Module FvwmIconMan GlobalIconManShowHide
#-----------------------------------------------------------------------
# start a Pager
+ I Module FvwmPager
#-----------------------------------------------------------------------
# start horizontal panel
+ I Module FvwmButtons VerticalPanel
#-----------------------------------------------------------------------
# start systray applets
+ I Wait stalonetray
+ I FuncStartSystrayApplets
#-----------------------------------------------------------------------


DestroyFunc ReloadLayoutParts
AddToFunc   ReloadLayoutParts
+ I PipeRead 'fns-built-trayapplist $FVWM_USERDIR/.systray.log $FVWM_USERDIR/.trayapplist'
+ I Load modules/VerticalPanel
+ I Load modules/GlobalIconMan_ShowHide
+ I FuncRestartModuleByAlias FvwmButtons VerticalPanel
+ I Wait stalonetray
+ I Exec exec fns-start-programs reload_applets $[FVWM_USERDIR]/.trayapplist


#=======================================================================
# Bindings
#=======================================================================

#   Keyname	Context Modifi 	Function

#-----------------------------------------------------------------------
# press SHIFT-ALT arrow anywhere, move active
# window to next/previous page
#-----------------------------------------------------------------------
Key Left	A	SM	FuncMoveWindowToPage -1p +0p
Key Right	A	SM	FuncMoveWindowToPage +1p +0p
Key Up		A	SM	FuncMoveWindowToPage +0p -1p
Key Down	A	SM	FuncMoveWindowToPage +0p +1p

#-----------------------------------------------------------------------
# key 1-4 move current window to page n
#-----------------------------------------------------------------------
Key 1		A	SM	Current FuncMoveWindowToPage 0 0
Key 2		A	SM	Current FuncMoveWindowToPage 1 0
Key 3		A	SM	Current FuncMoveWindowToPage 0 1
Key 4		A	SM	Current FuncMoveWindowToPage 1 1

#-----------------------------------------------------------------------
# Go to page n with SHIFT-CTRL + number
#-----------------------------------------------------------------------
Key 1		A	SC	FuncGotoPage 0 0
Key 2		A	SC	FuncGotoPage 1 0
Key 3		A	SC	FuncGotoPage 0 1
Key 4		A	SC	FuncGotoPage 1 1

#-----------------------------------------------------------------------
# press SHIFT-CTRL arrow anywhere, and scroll by one page
#-----------------------------------------------------------------------
Key Left	A	SC	FuncGotoPage -1p +0p
Key Right	A	SC	FuncGotoPage +1p +0p
Key Up		A	SC	FuncGotoPage +0p -1p
Key Down	A	SC	FuncGotoPage +0p +1p

#-----------------------------------------------------------------------
# Help info with SHIFT-CTRL-ALT P to show all page related key bindings
#-----------------------------------------------------------------------
key P		A	SCM	FuncShowMessage  "Page Key Bindings" \
"SHIFT-CTRL:" \
"Cursor right/left: Switch to page right/left" \
"Cursor up/down: Switch to page up/down" \
"1-4: Switch to page n" \
"SHIFT-ALT:" \
"Cursor right/left: Switch active window to page right/left" \
"Cursor up/down: Switch active window to page up/down" \
"1-4: Switch active window to page n" \
"ALT-CTRL:" \
"Cursor right/left/up/down: Move mouse pointer by 1% of a page" \
"SHIFT-ALT-CTRL:" \
"Cursor right/left/up/down: Scroll right/left by 10% of a page"



#=======================================================================
# Menus
#=======================================================================

#-----------------------------------------------------------------------
# Moves all windows of the same resource to another page
#-----------------------------------------------------------------------
DestroyMenu  MenuWindowGroupQuickMove
AddToMenu    MenuWindowGroupQuickMove
+ "&Right	Page%menu/window-move.xpm%" 	Pick All ($[w.resource]) MoveToPage +1p +0p
+ "&Left	Page%menu/window-move.xpm%" 	Pick All ($[w.resource]) MoveToPage -1p +0p
#+ "D&own	Page%menu/window-move.xpm%" 	Pick All ($[w.resource]) MoveToPage +0p +1p
#+ "&Up  	Page%menu/window-move.xpm%" 	Pick All ($[w.resource]) MoveToPage +0p -1p
+ "" 						Nop
+ "Page	1%menu/window-move.xpm%"		Pick All ($[w.resource]) FuncMoveWindowToPage 0 0
+ "Page	2%menu/window-move.xpm%"		Pick All ($[w.resource]) FuncMoveWindowToPage 1 0
+ "Page	3%menu/window-move.xpm%"		Pick All ($[w.resource]) FuncMoveWindowToPage 2 0
+ "Page	4%menu/window-move.xpm%"		Pick All ($[w.resource]) FuncMoveWindowToPage 3 0

#-----------------------------------------------------------------------
# Move a window to left/right/1-4 page
#-----------------------------------------------------------------------
DestroyMenu  MenuWindowMoveTo
AddToMenu    MenuWindowMoveTo
+ "Move to ..." Title
+ "$[gt.&Right	Page]%menu/window-move.xpm%"	AnimatedMove w+100 w
+ "&Left	Page%menu/window-move.xpm%"	AnimatedMove w-100 w
#+ "&Down	Page%menu/window-move.xpm%"	AnimatedMove w w+100
#+ "&Up  	Page%menu/window-move.xpm%"	AnimatedMove w w-100
+ "" 						Nop
+ "Page	1%menu/window-move.xpm%"		FuncMoveWindowToPage 0 0
+ "Page	2%menu/window-move.xpm%"		FuncMoveWindowToPage 1 0
+ "Page	3%menu/window-move.xpm%"		FuncMoveWindowToPage 2 0
+ "Page	4%menu/window-move.xpm%"		FuncMoveWindowToPage 3 0






